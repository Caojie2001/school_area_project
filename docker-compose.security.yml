version: '3.8'

services:
  # 主应用服务
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: school_area_app
    restart: unless-stopped
    
    # 环境变量
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HTTPS_PORT=3443
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=3306
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=school_area_management
    
    # 端口映射
    ports:
      - "3000:3000"   # HTTP端口（重定向到HTTPS）
      - "3443:3443"   # HTTPS端口（SSL加密）
    
    # 数据卷挂载
    volumes:
      # SSL证书目录（只读）
      - ./certs:/app/certs:ro
      # 输出文件目录
      - app_output:/app/output
      # 日志文件目录
      - app_logs:/app/logs
    
    # 服务依赖
    depends_on:
      db:
        condition: service_healthy
    
    # 健康检查
    healthcheck:
      test: ["CMD", "curl", "-f", "-k", "https://localhost:3443/api/auth/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # 安全配置
    security_opt:
      - no-new-privileges:true    # 禁止权限提升
    user: "1001:1001"             # 非root用户运行
    read_only: true               # 只读文件系统
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /var/tmp:noexec,nosuid,size=100m
    
    # 资源限制
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M

  # MySQL数据库服务
  db:
    image: mysql:8.0
    container_name: school_area_db
    restart: unless-stopped
    
    # 环境变量
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=school_area_management
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    
    # 仅内部网络访问
    expose:
      - "3306"
    
    # 数据持久化
    volumes:
      - db_data:/var/lib/mysql
      - ./db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    
    # 健康检查
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    
    # 安全配置
    security_opt:
      - no-new-privileges:true
    
    # 资源限制
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'

# 数据卷定义
volumes:
  db_data:
    driver: local
  app_output:
    driver: local
  app_logs:
    driver: local

# 网络配置
networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
